/* tslint:disable */
/* eslint-disable */
// @ts-nocheck
/**
 * App Store Connect API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AppClipRelationshipsApp } from './AppClipRelationshipsApp';
import {
    AppClipRelationshipsAppFromJSON,
    AppClipRelationshipsAppFromJSONTyped,
    AppClipRelationshipsAppToJSON,
} from './AppClipRelationshipsApp';
import type { AppEncryptionDeclarationRelationshipsBuilds } from './AppEncryptionDeclarationRelationshipsBuilds';
import {
    AppEncryptionDeclarationRelationshipsBuildsFromJSON,
    AppEncryptionDeclarationRelationshipsBuildsFromJSONTyped,
    AppEncryptionDeclarationRelationshipsBuildsToJSON,
} from './AppEncryptionDeclarationRelationshipsBuilds';
import type { BetaGroupRelationshipsBetaTesters } from './BetaGroupRelationshipsBetaTesters';
import {
    BetaGroupRelationshipsBetaTestersFromJSON,
    BetaGroupRelationshipsBetaTestersFromJSONTyped,
    BetaGroupRelationshipsBetaTestersToJSON,
} from './BetaGroupRelationshipsBetaTesters';

/**
 * 
 * @export
 * @interface BetaGroupRelationships
 */
export interface BetaGroupRelationships {
    /**
     * 
     * @type {AppClipRelationshipsApp}
     * @memberof BetaGroupRelationships
     */
    app?: AppClipRelationshipsApp;
    /**
     * 
     * @type {AppEncryptionDeclarationRelationshipsBuilds}
     * @memberof BetaGroupRelationships
     */
    builds?: AppEncryptionDeclarationRelationshipsBuilds;
    /**
     * 
     * @type {BetaGroupRelationshipsBetaTesters}
     * @memberof BetaGroupRelationships
     */
    betaTesters?: BetaGroupRelationshipsBetaTesters;
}

/**
 * Check if a given object implements the BetaGroupRelationships interface.
 */
export function instanceOfBetaGroupRelationships(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BetaGroupRelationshipsFromJSON(json: any): BetaGroupRelationships {
    return BetaGroupRelationshipsFromJSONTyped(json, false);
}

export function BetaGroupRelationshipsFromJSONTyped(json: any, ignoreDiscriminator: boolean): BetaGroupRelationships {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'app': !exists(json, 'app') ? undefined : AppClipRelationshipsAppFromJSON(json['app']),
        'builds': !exists(json, 'builds') ? undefined : AppEncryptionDeclarationRelationshipsBuildsFromJSON(json['builds']),
        'betaTesters': !exists(json, 'betaTesters') ? undefined : BetaGroupRelationshipsBetaTestersFromJSON(json['betaTesters']),
    };
}

export function BetaGroupRelationshipsToJSON(value?: BetaGroupRelationships | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'app': AppClipRelationshipsAppToJSON(value.app),
        'builds': AppEncryptionDeclarationRelationshipsBuildsToJSON(value.builds),
        'betaTesters': BetaGroupRelationshipsBetaTestersToJSON(value.betaTesters),
    };
}

